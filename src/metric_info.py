## Metrics
class MetricsFromAMLB:
    """This class is responsible for storing metrics and their related information. To add a new metric, add it here.
    !Important note: This was generated by ChatGPT and may not be accurate. Please feel free to modify it as needed.
    """

    def __init__(self) -> None:
        self.metrics_info = {
            "binary_metrics": {
                "auc": {
                    "description": "Area Under the ROC Curve, measures classification performance.",
                    "better_value": "higher",
                },
                "logloss": {
                    "description": "Logarithmic Loss, evaluates how well probabilities are predicted.",
                    "better_value": "lower",
                },
                "acc": {
                    "description": "Accuracy, proportion of correctly classified instances.",
                    "better_value": "higher",
                },
                "balacc": {
                    "description": "Balanced Accuracy, accounts for class imbalance.",
                    "better_value": "higher",
                },
            },
            "multiclass_metrics": {
                "logloss": {
                    "description": "Logarithmic Loss, evaluates how well probabilities are predicted.",
                    "better_value": "lower",
                },
                "acc": {
                    "description": "Accuracy, proportion of correctly classified instances.",
                    "better_value": "higher",
                },
                "balacc": {
                    "description": "Balanced Accuracy, accounts for class imbalance.",
                    "better_value": "higher",
                },
            },
            "regression_metrics": {
                "rmse": {
                    "description": "Root Mean Square Error, measures prediction error magnitude.",
                    "better_value": "lower",
                },
                "r2": {
                    "description": "R-squared, proportion of variance explained by the model.",
                    "better_value": "higher",
                },
                "mae": {
                    "description": "Mean Absolute Error, average of absolute prediction errors.",
                    "better_value": "lower",
                },
            },
            "timeseries_metrics": {
                "mase": {
                    "description": "Mean Absolute Scaled Error, compares model error to naive forecasting error.",
                    "better_value": "lower",
                },
                "mape": {
                    "description": "Mean Absolute Percentage Error, measures percentage prediction error.",
                    "better_value": "lower",
                },
                "smape": {
                    "description": "Symmetric Mean Absolute Percentage Error, measures scaled percentage error.",
                    "better_value": "lower",
                },
                "wape": {
                    "description": "Weighted Absolute Percentage Error, weighted measure of error.",
                    "better_value": "lower",
                },
                "rmse": {
                    "description": "Root Mean Square Error, measures prediction error magnitude.",
                    "better_value": "lower",
                },
                "mse": {
                    "description": "Mean Squared Error, average of squared prediction errors.",
                    "better_value": "lower",
                },
                "mql": {
                    "description": "Mean Quantile Loss, evaluates quantile regression performance.",
                    "better_value": "lower",
                },
                "wql": {
                    "description": "Weighted Quantile Loss, weighted measure for quantile regression.",
                    "better_value": "lower",
                },
                "sql": {
                    "description": "Sum Quantile Loss, cumulative quantile regression error.",
                    "better_value": "lower",
                },
            },
        }
